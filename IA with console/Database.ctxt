#BlueJ class context
comment0.params=
comment0.target=Database()
comment0.text=\r\n\ Constructs\ an\ empty\ database.\r\n
comment1.params=
comment1.target=java.util.LinkedList\ getJobList()
comment1.text=\r\n\ Returns\ the\ job\ list\ of\ this\ database.\r\n\ \r\n\ @return\ the\ job\ list\ of\ this\ database\r\n
comment10.params=
comment10.target=void\ assignJobsToVolunteers()
comment10.text=\r\n\ Assigns\ the\ jobs\ to\ the\ vounteers\ to\ minimize\ the\ number\ of\ volunteers\ without\ jobs.\r\n
comment11.params=jobList
comment11.target=java.util.LinkedList\ bubbleSortJobList(java.util.LinkedList)
comment11.text=\r\n\ Bubble\ sorts\ the\ given\ job\ list\ in\ order\ from\ least\ number\ of\ volunteers\ neeeded,\ to\ greatest.\r\n\ \r\n\ @param\ jobList<br>\r\n\ <i>precondition\:</i>\ <code>jobList</code>\ cannot\ be\ null\r\n
comment12.params=volunteerList
comment12.target=java.util.LinkedList\ bubbleSortVolunteerList(java.util.LinkedList)
comment12.text=\r\n\ Bubble\ sorts\ the\ given\ volunteer\ list\ in\ order\ from\ least\ number\ of\ jobs\ the\ volunteer\ is\ able\ to\ do,\ to\ greatest.\r\n\ \r\n\ @param\ volunteerList\ <br>\r\n\ <i>precondition\:</i>\ <code>volunteerList</code>\ cannot\ be\ null\r\n
comment13.params=jobIndex
comment13.target=boolean\ deleteJob(int)
comment13.text=\r\n\ Deletes\ the\ job\ at\ the\ given\ index\ in\ the\ job\ list.\r\n\ \r\n\ @param\ jobIndex\ the\ index\ in\ the\ job\ list\ of\ the\ job\ to\ be\ deleted\r\n\ @return\ true\ if\ the\ job\ was\ successfully\ deleted;\ false\ otherwise\r\n
comment14.params=volunteerIndex
comment14.target=boolean\ deleteVolunteer(int)
comment14.text=\r\n\ Deletes\ the\ volunteer\ at\ the\ given\ index\ in\ the\ volunteer\ list.\r\n\ \r\n\ @param\ volunteerIndex\ the\ index\ in\ the\ volunteer\ list\ of\ the\ volunteer\ to\ be\ deleted\r\n\ @return\ true\ if\ the\ volunteer\ was\ successfully\ created;\ false\ otherwise\r\n
comment15.params=jobIndex
comment15.target=double\ getJobVolunteersToVolunteersNeededPercentage(int)
comment15.text=\r\n\ Calculates\ and\ returns\ the\ volunteer\ to\ volunteers\ needed\ precentage\ of\ the\ job\ at\ the\ given\ index.\r\n
comment2.params=
comment2.target=boolean\ getJobsHaveBeenAssigned()
comment2.text=\r\n\ Returns\ if\ jobs\ have\ been\ assigned\ to\ volunteers\ yet.\r\n\r\n\ @return\ if\ jobs\ have\ been\ assigned\ to\ volunteers\ yet\r\n
comment3.params=
comment3.target=java.util.LinkedList\ getVolunteerList()
comment3.text=\r\n\ Returns\ the\ volunteer\ list\ of\ this\ database.\r\n\ \r\n\ @return\ the\ volunteer\ list\ of\ this\ database.\r\n
comment4.params=job
comment4.target=void\ setJobList(java.util.LinkedList)
comment4.text=\r\n\ Sets\ the\ job\ list\ of\ this\ database.\r\n\ \r\n\ @param\ job\ the\ job\ list\ of\ this\ database\ <br>\r\n\ <i>precondition\:</i>\ <code>job</code>\ cannot\ be\ null\r\n
comment5.params=jobsHaveBeenAssigned
comment5.target=void\ setJobsHaveBeenAssigned(boolean)
comment5.text=\r\n\ Sets\ the\ job\ list\ of\ this\ database.\r\n\ \r\n\ @param\ jobsHaveBeenAssigned\ if\ jobs\ have\ been\ assigned\ to\ volunteers\ yet\r\n
comment6.params=volunteer
comment6.target=void\ setVolunteerList(java.util.LinkedList)
comment6.text=\r\n\ Sets\ the\ volunteer\ list\ of\ this\ database.\r\n\ \r\n\ @param\ volunteer\ the\ volunteer\ list\ of\ this\ database\ <br>\r\n\ <i>precondition\:</i>\ <code>volunteer</code>\ cannot\ be\ null\r\n
comment7.params=jobTitle\ numberOfVolunteersRequired
comment7.target=boolean\ addJob(java.lang.String,\ int)
comment7.text=\r\n\ Checks\ if\ the\ proposed\ job\ already\ exists,\ and\ if\ not,\ creates\ the\ given\ job\ with\ the\ given\ number\ of\ volutneers\ required\ and\ adds\ it\ to\ the\ end\ of\ the\ list\ of\ jobs.\ \r\n\ \r\n\ @param\ jobTitle\ the\ job\ title\ of\ this\ job\ to\ be\ added\ <br>\r\n\ <i>precondition\:</i>\ <code>jobTitle</code>\ cannot\ be\ null\r\n\ @param\ numberOfVolunteersRequired\ the\ number\ of\ volunteers\ required\ of\ this\ job\r\n\ @return\ true\ if\ the\ job\ was\ successfully\ created\ and\ added;\ false\ otherwise\r\n
comment8.params=familyName\ givenName
comment8.target=boolean\ addVolunteer(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Checks\ if\ the\ volunteer\ already\ exists,\ and\ if\ not,\ creates\ a\ volunteer\ with\ the\ given\ family\ name\ and\ given\ name\ and\ adds\ it\ to\ the\ end\ of\ the\ list\ of\ volunteers.\r\n\ \r\n\ @param\ familyName\ the\ family\ name\ of\ this\ volunteer\ to\ be\ added\ <br>\r\n\ <i>precondition\:</i>\ <code>familyName</code>\ cannot\ be\ null\r\n\ @param\ givenName\ the\ given\ name\ of\ this\ volunteer\ to\ be\ added\ <br>\r\n\ <i>precondition\:</i>\ <code>givenName</code>\ cannot\ be\ null\r\n\ @return\ true\ if\ the\ volunteer\ was\ successfully\ created\ and\ added;\ false\ otherwise\r\n
comment9.params=familyName\ givenName\ canDoJob
comment9.target=boolean\ addVolunteer(java.lang.String,\ java.lang.String,\ boolean[])
comment9.text=\r\n\ Checks\ if\ the\ volunteer\ already\ exists,\ and\ if\ not,\ creates\ a\ volunteer\ with\ the\ given\ family\ name,\ given\ name,\ and\ jobs\ it\ can\ do,\ and\ adds\ it\ to\ the\ end\ of\ the\ list\ of\ volunteers.\r\n\r\n@param\ familyName\ the\ family\ name\ of\ this\ volunteer\ to\ be\ added\ <br>\r\n\ <i>precondition\:</i>\ <code>familyName</code>\ cannot\ be\ null\r\n\ @param\ givenName\ the\ given\ name\ of\ this\ volunteer\ to\ be\ added\ <br>\r\n\ <i>precondition\:</i>\ <code>givenName</code>\ cannot\ be\ null\r\n\ @param\ canDoJob\ the\ boolean\ array\ representing\ the\ jobs\ the\ volunteer\ can\ and\ cannot\ do;\ true\ if\ they\ can\ do\ the\ job\ at\ the\ index;\ false\ otherwise\ <br>\r\n\ <i>precondition\:</i>\ <code>canDoJob</code>\ cannot\ be\ null\r\n\ @return\ true\ if\ the\ volunteer\ was\ successfully\ created\ and\ added;\ false\ otherwise\r\n
numComments=16
