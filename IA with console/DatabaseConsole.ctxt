#BlueJ class context
comment0.params=
comment0.target=DatabaseConsole()
comment1.params=arguments
comment1.target=void\ main(java.lang.String[])
comment10.params=filePath
comment10.target=void\ addJobsFromFile(java.lang.String)
comment10.text=\r\n\ Adds\ jobs\ from\ the\ given\ file.\r\n\ \r\n\ @param\ filePath\ the\ file\ path\ of\ the\ file\ <br>\r\n\ <i>precondition\:</i>\ <code>filePath</code>\ cannot\ be\ null\r\n
comment11.params=filePath
comment11.target=void\ addVolunteersFromFile(java.lang.String)
comment11.text=\r\n\ Adds\ volunteers\ from\ the\ given\ file.\r\n\ \r\n\ @param\ filePath\ the\ file\ path\ of\ the\ file\ <br>\r\n\ <i>precondition\:</i>\ <code>filePath</code>\ cannot\ be\ null\r\n
comment12.params=
comment12.target=void\ displayActualJobsOfVolunteers()
comment12.text=\r\n\ Prints\ out\ in\ the\ console\ the\ list\ of\ volunteers\ and\ their\ actual\ jobs.\r\n
comment13.params=
comment13.target=void\ displayCurrentJobs()
comment13.text=\r\n\ Prints\ out\ in\ the\ console\ the\ current\ jobs\ added.\r\n
comment14.params=
comment14.target=void\ displayCurrentVolunteers()
comment14.text=\r\n\ Prints\ out\ in\ the\ console\ the\ current\ volunteers\ added\ and\ the\ jobs\ they\ are\ capable\ of\ doing.\r\n
comment15.params=
comment15.target=void\ displayExtraJobs()
comment15.text=\r\n\ Prints\ out\ in\ the\ console\ the\ jobs\ that\ need\ volunteers,\ and\ the\ number\ of\ volunteers\ each\ job\ requires,\ in\ order\ from\ jobs\ that\ need\ the\ most\ volunteers\ to\ jobs\ that\ need\ the\ least\ volunteers.\r\n
comment16.params=jobTitle
comment16.target=void\ displayGivenJob(java.lang.String)
comment16.text=\r\n\ Prints\ out\ the\ information\ of\ the\ job\ of\ the\ given\ job\ title.\ \r\n\ \r\n\ @param\ jobTitle\ the\ family\ name\ of\ the\ volunteer\ desired\ <br>\r\n\ <i>precondition\:</i>\ <code>jobTitle</code>\ cannot\ be\ null\r\n
comment17.params=familyName\ givenName
comment17.target=void\ displayGivenVolunteer(java.lang.String,\ java.lang.String)
comment17.text=\r\n\ Prints\ out\ the\ information\ of\ the\ volunteer\ of\ the\ given\ family\ and\ given\ name.\ \r\n\ \r\n\ @param\ familyName\ the\ family\ name\ of\ the\ volunteer\ desired\ <br>\r\n\ <i>precondition\:</i>\ <code>familyName</code>\ cannot\ be\ null\r\n\ @param\ givenName\ the\ givenName\ of\ the\ volunteer\ desired\ <br>\r\n\ <i>precondition\:</i>\ <code>givenName</code>\ cannot\ be\ null\r\n
comment18.params=lastAction
comment18.target=void\ displayLastAction(DatabaseConsole.LastAction)
comment18.text=\r\n\ Prints\ out\ in\ the\ console\ the\ last\ action\ done.\r\n\ \r\n\ @param\ lastAction\ the\ last\ action\ done\ <br>\r\n\ <i>precondition\:</i>\ <code>lastAction</code>\ cannot\ be\ null\r\n
comment19.params=
comment19.target=void\ displayJobsAndTheirVolunteers()
comment19.text=\r\n\ Prints\ out\ in\ the\ console\ the\ list\ of\ actual\ jobs\ having\ the\ names\ of\ the\ volunteers\ of\ each\ job\ below\ each\ job.\ \r\n
comment2.params=
comment2.target=java.lang.String\ getInput()
comment2.text=\r\n\ Returns\ the\ input\ from\ user\ of\ this\ console.\r\n\ \r\n\ @return\ the\ input\ from\ user\ of\ this\ console\r\n
comment20.params=
comment20.target=void\ displayVolunteersWithoutJobs()
comment20.text=\r\n\ Prints\ out\ in\ the\ console\ the\ volunteers\ that\ need\ to\ be\ trained.\r\n
comment21.params=
comment21.target=void\ exit()
comment21.text=\r\n\ Terminates\ the\ program.\r\n
comment22.params=volunteer\ jobIndex
comment22.target=void\ findOutIfTheVolunteerCanDoJob(Volunteer,\ int)
comment22.text=\r\n\ Asks\ the\ user\ via\ console\ if\ the\ given\ volunteer\ can\ do\ the\ job\ at\ the\ given\ job\ index.\ Then\ sets\ the\ answer\ in\ the\ given\ volunteers\ potential\ jobs\ list.\ \r\n\ \r\n\ @param\ volunteer\ the\ volunteer\ asked\ <br>\r\n\ <i>precondition\:</i>\ <code>volunteer</code>\ cannot\ be\ null\r\n\ @param\ jobIndex\ the\ job\ index\ of\ the\ job\ the\ volunteer\ is\ asked\ about\ \r\n
comment23.params=input\ validOption
comment23.target=void\ manageConsoleInput(java.lang.String,\ int[])
comment23.text=\r\n\ Receives\ the\ console\ input\ and\ the\ list\ of\ valid\ console\ inputs\ and\ invokes\ appropriate\ action.\r\n\ \r\n\ @param\ input\ the\ console\ input\ <br>\r\n\ <i>precondition\:</i>\ <code>input</code>\ cannot\ be\ null\r\n
comment24.params=
comment24.target=void\ showConsoleDisplayForAddingJobs()
comment24.text=\r\n\ Print\ outs\ in\ the\ console\ the\ user\ interface\ for\ when\ the\ user\ is\ adding\ jobs.\ \r\n
comment25.params=
comment25.target=void\ showConsoleDisplayForAddingVolunteers()
comment25.text=\r\n\ Print\ outs\ in\ the\ console\ the\ user\ interface\ for\ when\ the\ user\ is\ adding\ volunteer.\ \r\n
comment26.params=
comment26.target=void\ showInstructions()
comment26.text=\r\n\ Prints\ out\ in\ the\ console\ the\ instructions\ for\ using\ the\ program.\r\n
comment27.params=file
comment27.target=void\ writeJobListToFile(java.io.File)
comment27.text=\r\n\ Writes\ the\ job\ list\ to\ the\ given\ file.\r\n\ \r\n\ @param\ file\ the\ file\ written\ in\ <br>\r\n\ <i>precondition\:</i>\ <code>file</code>\ cannot\ be\ null\r\n
comment28.params=file
comment28.target=void\ writeVolunteerListToFile(java.io.File)
comment28.text=\r\n\ Writes\ the\ volunteer\ list\ to\ the\ given\ file.\r\n\ \r\n\ @param\ file\ the\ file\ written\ in\ <br>\r\n\ <i>precondition\:</i>\ <code>file</code>\ cannot\ be\ null\r\n
comment29.params=
comment29.target=void\ addAllJobs()
comment29.text=\r\n\ Invokes\ the\ appropriate\ methods\ for\ when\ the\ user\ is\ adding\ and\ removing\ jobs.\ \r\n
comment3.params=
comment3.target=boolean\ getInputIsValid()
comment3.text=\r\n\ Returns\ the\ validity\ of\ the\ input\ from\ user\ of\ this\ console.\r\n\ \r\n\ @return\ the\ validity\ of\ the\ input\ from\ user\ of\ this\ console\r\n
comment30.params=
comment30.target=void\ addAllVolunteers()
comment30.text=\r\n\ Invokes\ the\ appropriate\ methods\ for\ when\ the\ user\ is\ adding\ and\ removing\ volunteers.\r\n
comment4.params=
comment4.target=DatabaseConsole.LastAction\ getLastAction()
comment4.text=\r\n\ Returns\ the\ last\ action\ done\ by\ this\ console.\r\n\ \r\n\ @return\ the\ last\ action\ done\ by\ this\ console\r\n
comment5.params=
comment5.target=int[]\ getValidInputOption()
comment5.text=\r\n\ Returns\ the\ valid\ input\ from\ user\ options\ of\ this\ console.\r\n\ \r\n\ @return\ the\ valid\ input\ from\ user\ options\ of\ this\ console\r\n
comment6.params=input
comment6.target=void\ setInput(java.lang.String)
comment6.text=\r\n\ Sets\ the\ input\ from\ user\ of\ this\ console.\r\n\ \r\n\ @param\ input\ the\ input\ from\ user\ of\ this\ console\ <br>\r\n\ <i>precondition\:</i>\ <code>input</code>\ cannot\ be\ null\r\n
comment7.params=inputIsValid
comment7.target=void\ setInputIsValid(boolean)
comment7.text=\r\n\ Sets\ the\ validity\ of\ the\ input\ from\ user\ of\ this\ console.\r\n\ \r\n\ @param\ inputIsValid\ the\ validity\ of\ the\ input\ from\ user\ of\ this\ console\r\n
comment8.params=lastAction
comment8.target=void\ setLastAction(DatabaseConsole.LastAction)
comment8.text=\r\n\ Sets\ the\ last\ action\ done\ by\ this\ console.\r\n\ \r\n\ @param\ lastAction\ the\ last\ action\ done\ by\ this\ console\r\n
comment9.params=validInputOption
comment9.target=void\ setValidInputOption(int[])
comment9.text=\r\n\ Sets\ the\ valid\ input\ from\ user\ options\ of\ this\ console.\r\n\ \r\n\ @param\ validInputOption\ the\ valid\ input\ from\ user\ options\ of\ this\ console\ <br>\r\n\ <i>precondition\:</i>\ <code>validInputOption</code>\ cannot\ be\ null\r\n
numComments=31
